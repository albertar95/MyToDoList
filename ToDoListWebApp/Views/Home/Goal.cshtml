@model ToDoListWebApp.ViewModels.GoalPageViewModel

@{
    ViewData["Title"] = "Goal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow mb-4">
    <!-- Card Header - Dropdown -->
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">@Model.Goal.Title</h6>
        <div class="dropdown no-arrow d-flex">
            <p style="padding-right:10px;">status : @Model.Tasks.Where(p => p.TaskStatus == true).Sum(q => q.TaskWeight) / 100%</p>
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                 aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header"></div>
                <a class="dropdown-item" href="@Url.Action("EditGoal","Home",new {NidGoal = Model.Goal.NidGoal})">Edit Goal</a>
                <a class="dropdown-item" id="btnDeleteGoal" href="#">Delete Goal</a>
                @if (Model.Goal.GoalStatus == 0)
                {
                    <a class="dropdown-item" id="btnCloseGoal" href="#">Close Goal</a>
                }
                @if (Model.Goal.GoalStatus == 1)
                {
                    <a class="dropdown-item" href="@Url.Action("OpenGoal","Home",new { NidGoal = Model.Goal.NidGoal})">Reopen Goal</a>
                }
            </div>
        </div>
    </div>
    <!-- Card Body -->
    <div class="card-body">
        <div class="row">
            <div class="alert alert-success alert-dismissible fade show" role="alert" id="successDiv" hidden>
                <p id="successMessage"></p>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorDiv" hidden>
                <p id="errorMessage"></p>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="d-flex mb-1">
                    <a href="#" class="btn btn-block btn-outline-success" style="width:fit-content;justify-content:right;" id="btnNewTask">new Task</a>
                    <h2 class="text-center" style="margin:0 auto;">Tasks</h2>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered" id="TblTasks" width="100%" cellspacing="0">
                        <thead style="text-align:center;">
                            <tr>
                                <th>Action</th>
                                <th>Title</th>
                                <th>Task Weight</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tsk in Model.Tasks.Where(q => q.TaskStatus == false).OrderBy(p => p.Title))
                            {
                                <tr style="text-align:center;">
                                    <td>
                                        <a href="#" onclick="DeleteTask('@tsk.NidTask','@tsk.Title')" class="btn btn-outline-danger">Delete</a>
                                        <a href="#" onclick="DoneTask('@tsk.NidTask','@tsk.Title')" class="btn btn-outline-primary">Done</a>
                                    </td>
                                    <td><textarea id="txtFTaskTitle" onfocusout="UpdateTask('@tsk.NidTask',this.value,'@tsk.TaskWeight')">@tsk.Title</textarea><a href="#" style="padding:5px;" onclick="ShowDesc('@Html.Raw(tsk.Description)','@tsk.NidTask')">Desc</a></td>
                                    <td><input type="number" onfocusout="UpdateTask('@tsk.NidTask','@tsk.Title',this.value)" id="txtFTaskEstimate" style="width:75px;text-align:center;" value="@tsk.TaskWeight" /> %</td>
                                </tr>
                            }
                        </tbody>
                        @if(Model.Tasks.Where(q => q.TaskStatus == false).Count() > 0)
                        {
                            <tfoot>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th style="text-align:center;" id="txtSumTaskWeight">sum : @Model.Tasks.Where(p => p.TaskStatus == false).Sum(q => q.TaskWeight) %</th>
                                </tr>
                            </tfoot>
                        }
                    </table>
                </div>
            </div>
        </div>
        <hr style="border-top:2px solid;" />
        <div class="row">
            <div class="col-lg-12">
                <h2 class="text-center">Done Tasks</h2>
                <div class="table-responsive">
                    <table class="table table-bordered" id="TblDones" width="100%" cellspacing="0">
                        <thead style="text-align:center;">
                            <tr>
                                <th>Action</th>
                                <th>Title</th>
                                <th>Task Weight</th>
                                <th>Closure Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tsk in Model.Tasks.Where(q => q.TaskStatus == true).OrderBy(p => p.CreateDate))
                            {
                                <tr style="text-align:center;">
                                    <td>
                                        <a href="#" onclick="DeleteTask('@tsk.NidTask','@tsk.Title')" class="btn btn-outline-danger">Delete</a>
                                        <a href="#" onclick="UndoTask('@tsk.NidTask','@tsk.Title')" class="btn btn-outline-primary">Undo</a>
                                    </td>
                                    <td>@tsk.Title</td>
                                    <td>@tsk.TaskWeight %</td>
                                    <td>@ToDoListWebApp.Helpers.Dates.ToPersianDate2(tsk.ClosureDate.Value)</td>
                                </tr>
                            }
                        </tbody>
                        @if(Model.Tasks.Where(q => q.TaskStatus == true).Count() > 0)
                        {
                            <tfoot>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th style="text-align:center;">sum : @Model.Tasks.Where(p => p.TaskStatus == true).Sum(q => q.TaskWeight) %</th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="goalModal" tabindex="-1" role="dialog" aria-labelledby="goalModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="goalModalLabel"></h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="AddTaskSection" hidden>
                    <div class="form-group">
                        <input id="txtTaskTitle" type="text" class="form-control" placeholder="Title" autofocus />
                    </div>
                    <div class="form-group">
                        <input id="txtTaskWeight" type="number" min="0" max="100" value="0" class="form-control" onfocusout="CheckWeight(this.value)" />
                    </div>
                    <div class="form-group">
                        <textarea id="txtTaskDescription" placeholder="Description" class="form-control" rows="5"></textarea>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" class="btn btn-primary" id="btnSubmitAddTask">create</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="DeleteTaskSection" hidden>
                    <div class="form-group">
                        <p id="txtDeleteTask"></p>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" class="btn btn-danger" id="btnSubmitDeleteTask">delete</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="DoneTaskSection" hidden>
                    <div class="form-group">
                        <p id="txtDoneTask"></p>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" class="btn btn-success" id="btnSubmitDoneTask">Done</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="UndoTaskSection" hidden>
                    <div class="form-group">
                        <p id="txtUndoTask"></p>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" class="btn btn-warning" id="btnSubmitUndoTask">Undo</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="DeleteGoalSection" hidden>
                    <div class="form-group">
                        <p style="color:maroon;">danger : with this action all information about this goal such as tasks will be remove from db.</p>
                        <p id="txtDeletegoal">are you sure? delete goal : @Model.Goal.Title</p>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" class="btn btn-danger" onclick="DeleteGoal('@Model.Goal.NidGoal')">delete</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="CloseGoalSection" hidden>
                    <div class="form-group">
                        <p id="txtcloseGoal">are you sure? close goal : @Model.Goal.Title</p>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="@Url.Action("CloseGoal","Home",new { NidGoal = Model.Goal.NidGoal})" class="btn btn-info">Close it!</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
                <div id="TaskDescSection" hidden>
                    <div class="form-group">
                        <textarea class="form-control" id="TaskDescArea"></textarea>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-lg-4"></div>
                            <div class="col-lg-4 text-center">
                                <a href="#" id="btnUpdateTaskDesc" class="btn btn-warning">edit</a>
                            </div>
                            <div class="col-lg-4"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $(function () {
            $(".modal").on('shown.bs.modal',function()
            {
                $(this).find('[autofocus]').focus();
            });
            if ('@TempData["GoalPageSuccess"]' != "") {
                $("#successDiv").removeAttr('hidden');
                $("#successMessage").text('@TempData["GoalPageSuccess"]');
                window.setTimeout(function () {
                    $("#successDiv").attr('hidden', 'hidden');
                }, 5000);
            }
            if ('@TempData["GoalPageError"]' != "") {
                $("#errorDiv").removeAttr('hidden');
                $("#errorMessage").text('@TempData["GoalPageError"]');
                window.setTimeout(function () {
                    $("#errorDiv").attr('hidden', 'hidden');
                }, 5000);
            }
            $("#btnNewTask").click(function () {
                $("#goalModalLabel").text('Add Task');
                $("#AddTaskSection").removeAttr('hidden');
                $("#DeleteTaskSection").attr('hidden', 'hidden');
                $("#DoneTaskSection").attr('hidden', 'hidden');
                $("#UndoTaskSection").attr('hidden', 'hidden');
                $("#DeleteGoalSection").attr('hidden', 'hidden');
                $("#TaskDescSection").attr('hidden', 'hidden');
                $("#CloseGoalSection").attr('hidden', 'hidden');
                $("#goalModal").modal();
            });
            $("#btnSubmitAddTask").click(function(e)
            {
                e.preventDefault();
                $.ajax(
                    {
                        url: '@Url.Action("SubmitAddTask","Home")',
                        type: 'post',
                        datatype: 'json',
                        data: { NidGoal: '@Model.Goal.NidGoal', Title: $("#txtTaskTitle").val(), TWeight : $("#txtTaskWeight").val(), Description: $("#txtTaskDescription").val() },
                        success: function (result) {
                            window.location.reload();
                        },
                        error: function () {
                            alert("error occured while creating task!")
                        }
                    });
            });
            $("#btnDeleteGoal").click(function(e)
            {
                e.preventDefault();
                $("#DeleteGoalSection").removeAttr('hidden');
                $("#AddTaskSection").attr('hidden', 'hidden');
                $("#DoneTaskSection").attr('hidden', 'hidden');
                $("#UndoTaskSection").attr('hidden', 'hidden');
                $("#DeleteTaskSection").attr('hidden', 'hidden');
                $("#TaskDescSection").attr('hidden', 'hidden');
                $("#CloseGoalSection").attr('hidden', 'hidden');
                $("#goalModal").modal();
            });
            $("#btnCloseGoal").click(function(e)
            {
                e.preventDefault();
                $("#CloseGoalSection").removeAttr('hidden');
                $("#AddTaskSection").attr('hidden', 'hidden');
                $("#DoneTaskSection").attr('hidden', 'hidden');
                $("#UndoTaskSection").attr('hidden', 'hidden');
                $("#DeleteTaskSection").attr('hidden', 'hidden');
                $("#TaskDescSection").attr('hidden', 'hidden');
                $("#DeleteGoalSection").attr('hidden', 'hidden');
                $("#goalModal").modal();
            });
        });
        function DeleteTask(nidtask,Title) {
            $("#goalModalLabel").text('Delete Task');
            $("#txtDeleteTask").text('are you sure? deleting task : ' + Title);
            $("#btnSubmitDeleteTask").attr('href', '@Url.Action("DeleteTask","Home")' + '?NidTask=' + nidtask + '&NidGoal=' + '@Model.Goal.NidGoal');
            $("#DeleteTaskSection").removeAttr('hidden');
            $("#AddTaskSection").attr('hidden', 'hidden');
            $("#DoneTaskSection").attr('hidden', 'hidden');
            $("#UndoTaskSection").attr('hidden', 'hidden');
            $("#DeleteGoalSection").attr('hidden', 'hidden');
            $("#TaskDescSection").attr('hidden', 'hidden');
            $("#CloseGoalSection").attr('hidden', 'hidden');
            $("#goalModal").modal();
        }
        function DoneTask(nidtask, Title) {
            $("#goalModalLabel").text('Done Task');
            $("#txtDoneTask").text('are you sure? done task : ' + Title);
            $("#btnSubmitDoneTask").attr('href', '@Url.Action("DoneTask","Home")' + '?NidTask=' + nidtask + '&NidGoal=' + '@Model.Goal.NidGoal');
            $("#DoneTaskSection").removeAttr('hidden');
            $("#AddTaskSection").attr('hidden', 'hidden');
            $("#DeleteTaskSection").attr('hidden', 'hidden');
            $("#UndoTaskSection").attr('hidden', 'hidden');
            $("#DeleteGoalSection").attr('hidden', 'hidden');
            $("#TaskDescSection").attr('hidden', 'hidden');
            $("#CloseGoalSection").attr('hidden', 'hidden');
            $("#goalModal").modal();
        }
        function UndoTask(nidtask, Title) {
            $("#goalModalLabel").text('Undo Task');
            $("#txtUndoTask").text('are you sure? undo task : ' + Title);
            $("#btnSubmitUndoTask").attr('href', '@Url.Action("UndoTask","Home")' + '?NidTask=' + nidtask + '&NidGoal=' + '@Model.Goal.NidGoal');
            $("#UndoTaskSection").removeAttr('hidden');
            $("#AddTaskSection").attr('hidden', 'hidden');
            $("#DeleteTaskSection").attr('hidden', 'hidden');
            $("#DoneTaskSection").attr('hidden', 'hidden');
            $("#DeleteGoalSection").attr('hidden', 'hidden');
            $("#TaskDescSection").attr('hidden', 'hidden');
            $("#CloseGoalSection").attr('hidden', 'hidden');
            $("#goalModal").modal();
        }
        function DeleteGoal(nidgoal)
        {
            $.ajax(
                {
                    url: '@Url.Action("SubmitDeleteGoal","Home")',
                    type: 'post',
                    datatype: 'json',
                    data: { NidGoal: nidgoal },
                    success: function (result) {
                        window.location = '@Url.Action("Goals","Home")';
                    },
                    error: function () {
                        alert("error occured while deleing goal!")
                    }
                });
        }
        function UpdateTask(nidtask,title,estimate)
        {
            $.ajax(
                {
                    url: '@Url.Action("SubmitEditTask","Home")',
                    type: 'post',
                    datatype: 'json',
                    data: { NidGoal: '@Model.Goal.NidGoal', NidTask: nidtask, Title: title, TWeight: estimate },
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function () {
                        alert("error occured while editing task!")
                    }
                });
        }
        function ShowDesc(desc,nidtask)
        {
            $("#goalModalLabel").text('task description');
            $("#TaskDescArea").text(desc);
            $("#btnUpdateTaskDesc").attr('onclick', "UpdateTaskDescription('" + nidtask +"')");
            $("#TaskDescSection").removeAttr('hidden');
            $("#DeleteTaskSection").attr('hidden', 'hidden');
            $("#DoneTaskSection").attr('hidden', 'hidden');
            $("#UndoTaskSection").attr('hidden', 'hidden');
            $("#DeleteGoalSection").attr('hidden', 'hidden');
            $("#AddTaskSection").attr('hidden', 'hidden');
            $("#CloseGoalSection").attr('hidden', 'hidden');
            $("#goalModal").modal();
        }
        function UpdateTaskDescription(nidtask) {
            $.ajax(
                {
                    url: '@Url.Action("SubmitEditTaskDescription","Home")',
                    type: 'post',
                    datatype: 'json',
                    data: { NidGoal: '@Model.Goal.NidGoal', NidTask: nidtask, Description:$("#TaskDescArea").val() },
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function () {
                        alert("error occured while editing task!")
                    }
                });
        }
        function CheckWeight(val)
        {
            if(val > 100)
                $("#txtTaskWeight").val(100);
            if (val < 0)
                $("#txtTaskWeight").val(0);
        }
    </script>
}